import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from "@angular/common/http";
import { Observable } from "rxjs";
import { {{options.clientName}}Options } from "./{{options.clientName}}Options"
import * as dto from "./definitions";

@Injectable()
export class {{options.clientName}}{{#if options.generateInterface}} implements I{{options.clientName}}{{/if}} {
  private baseUri: string;

  constructor(
      private options: {{options.clientName}}Options,
      private http: HttpClient
  ) {
      this.baseUri = `${options.scheme}://${options.hostName}${options.port ? `:${options.port}` : ''}`;
  }

{{#api.operations}}
  /**
  {{#if summary}}
  * {{summary}}
  {{/if}}
  {{#args}}
  * @param { {{> type import="dto" }} } {{camlCase name}} {{description}}
  {{/args}}
  * @return { Observable<{{> type successResponse.[0] import="dto" }}> } {{successResponse.title}}
  */
  {{pascalCase name}}(
    {{#args}}
    {{camlCase name}}: {{> type import="dto" }}{{#if optional}} = undefined{{/if}}{{#unless @last}},{{/unless}}
    {{/args}}
  ) : Observable<{{> type successResponse.[0] import="dto" }}> {

    let gl$uri = this.baseUri + {{#pathSegments}}{{#isParam}}{{#unless @first}}" + {{/unless}}String({{name}}){{#unless @last}} + "{{/unless}}{{/isParam}}{{#unless isParam}}{{#if @first}}"{{/if}}{{name}}{{#if @last}}"{{/if}}{{/unless}}{{/pathSegments}};

    let gl$headers = new HttpHeaders({
      'Content-Type': '{{produces.[0]}};charset=UTF-8',
      'Accept': 'application/json, text/plain, */*'
    });

    let gl$request = this.http.request<{{> type successResponse.[0] import="dto" }}>("{{upperCase verb}}", gl$uri, {
      {{#requestBody}}
      body: {{camlCase name}},
      {{/requestBody}}
      headers: gl$headers
    });
    

    return gl$request;
  }
{{/api.operations}}

}
